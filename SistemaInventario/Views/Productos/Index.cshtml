@model IEnumerable<SistemaInventario.Models.Producto>
@{
    ViewBag.Title = "Productos";
    int page = ViewBag.Page ?? 1;
    int pageSize = ViewBag.PageSize ?? 10;
    int total = ViewBag.Total ?? Model.Count();
    int totalPages = (int)Math.Ceiling((double)total / pageSize);
    string buscar = ViewBag.Buscar as string;
}
<h1 class="mb-4">Productos</h1>
<div class="d-flex justify-content-between align-items-center mb-3">
    <form class="d-flex" method="get">
        <input type="text" name="buscar" value="@buscar" class="form-control me-2" placeholder="Buscar por nombre" />
        <button type="submit" class="btn btn-primary">Buscar</button>
    </form>
    <a class="btn btn-success" href="@Url.Action("Create")">Nuevo producto</a>
</div>
<table class="table table-striped table-hover">
    <thead class="table-light">
        <tr>
            <th>Nombre</th>
            <th>Proveedor</th>
            <th>Precio venta</th>
            <th>Stock actual</th>
            <th>Stock mínimo</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Nombre</td>
            <td>@item.Proveedor?.Nombre</td>
            <td>@item.PrecioVenta.ToString("C2")</td>
            <td>@item.StockActual</td>
            <td>@item.StockMinimo</td>
            <td class="text-end">
                <a class="btn btn-sm btn-outline-secondary" href="@Url.Action("Details", new { id = item.ProductoId })">Detalles</a>
                <a class="btn btn-sm btn-outline-primary" href="@Url.Action("Edit", new { id = item.ProductoId })">Editar</a>
                <a class="btn btn-sm btn-outline-danger" href="@Url.Action("Delete", new { id = item.ProductoId })">Eliminar</a>
            </td>
        </tr>
    }
    </tbody>
</table>
@if (!Model.Any())
{
    <p class="text-muted">No se encontraron productos.</p>
}
@if (totalPages > 1)
{
    <nav aria-label="Paginación de productos">
        <ul class="pagination">
            <li class="page-item @(page == 1 ? "disabled" : string.Empty)">
                <a class="page-link" href="@Url.Action("Index", new { page = page - 1, buscar = buscar })">Anterior</a>
            </li>
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == page ? "active" : string.Empty)">
                    <a class="page-link" href="@Url.Action("Index", new { page = i, buscar = buscar })">@i</a>
                </li>
            }
            <li class="page-item @(page == totalPages ? "disabled" : string.Empty)">
                <a class="page-link" href="@Url.Action("Index", new { page = page + 1, buscar = buscar })">Siguiente</a>
            </li>
        </ul>
    </nav>
}
